#!/bin/bash

set -ex
. ./profiles/common
# See also requirements.txt in tempest (probably need to sudo pip install -r requirements.txt)
#sudo apt-get install git testrepository subunit python-nose python-lxml python-boto \
#    python-junitxml python-subunit python-testresources python-oslotest python-stevedore \
#    python-cinderclient python-glanceclient python-heatclient python-keystoneclient \
#    python-neutronclient python-novaclient python-swiftclient python-ceilometerclient \
#    openvswitch-test openvswitch-common -y

[[ -z "$GATEWAY" ]] && export GATEWAY="10.245.168.1"
[[ -z "$CIDR_EXT" ]] && export CIDR_EXT="10.245.168.0/21"
[[ -z "$FIP_RANGE" ]] && export FIP_RANGE="10.245.171.0:10.245.171.255"
[[ -z "$NAMESERVER" ]] && export NAMESERVER="10.245.168.6"
[[ -z "$CIDR_PRIV" ]] && export CIDR_PRIV="172.16.0.0/22"
[[ -z "$SWIFT_IP" ]] && export SWIFT_IP="10.245.161.162"

# Accept network type as first parameter, assume gre if unspecified
net_type=${1:-"gre"}

# Configure neutron networking on overcloud
source rcs/openrc
./bin/neutron-ext-net-ksv3 --project admin --network-type flat -g $GATEWAY -c $CIDR_EXT -f $FIP_RANGE ext_net
./bin/neutron-tenant-net-ksv3 --project admin --network-type $net_type -r provider-router -N $NAMESERVER private $CIDR_PRIV
ext_net=$(openstack network list | awk '/ext_net/ {print $2}')

# Create demo/testing users, tenants and flavor
openstack project show --domain admin_domain demo || \
	openstack project create --domain admin_domain demo
openstack user show --domain admin_domain demo || \
	openstack user create --project-domain admin_domain --project demo \
	--password pass --enable --email demo@dev.null \
	--domain admin_domain demo
openstack role show Member || openstack role create Member
openstack role add --user-domain admin_domain --user demo \
	--project-domain admin_domain --project demo Member
openstack project show --domain admin_domain alt_demo || \
	openstack project create --domain admin_domain alt_demo
openstack user show --domain admin_domain alt_demo || \
	openstack user create --project-domain admin_domain --project alt_demo \
	--password secret --enable --email alt_demo@dev.null \
	--domain admin_domain alt_demo
openstack role add --user-domain admin_domain --user alt_demo \
	--project-domain admin_domain --project alt_demo Member
access=$(openstack ec2 credentials create --user-domain admin_domain \
	--user demo --project-domain admin_domain --project demo \
       | awk '/access/ {print $4}')
secret=$(openstack ec2 credentials show $access  | awk '/secret/ {print $4}')

# Download images if not already present
upload_image_minimal cloudimages xenial xenial-server-cloudimg-amd64-disk1.img
upload_image_minimal cloudimages bionic bionic-server-cloudimg-amd64-disk1.img
upload_image_minimal swift cirros_alt cirros-0.3.4-x86_64-disk.img
upload_image_minimal swift cirros cirros-0.3.4-x86_64-disk.img
image_id=$(openstack image list | awk '/cirros\s/ {print $2}')
image_alt_id=$(openstack image list | awk '/cirros_alt\s/ {print $2}')

echo "Flavors"
create_tempest_flavors
create_default_flavors

echo "Tempest"
router=$(neutron --os-project-name admin router-list | grep provider-router | awk '{ print $2}')
# Gather vars for tempest template
keystone=$(juju run --unit keystone/0 'unit-get private-address')
dashboard=$(juju run --unit openstack-dashboard/0 'unit-get private-address')
ncc=$(juju run --unit nova-cloud-controller/0 'unit-get private-address')
http=${OS_AUTH_PROTOCOL:-http}
default_domain_id=$(openstack domain list | awk '/default/ {print $2}')

# Insert vars into tempest conf
sed -e "s/__IMAGE_ID__/$image_id/g" -e "s/__IMAGE_ALT_ID__/$image_alt_id/g" \
    -e "s/__DASHBOARD__/$dashboard/g" -e "s/__KEYSTONE__/$keystone/g" \
    -e "s/__EXT_NET__/$ext_net/g" -e "s/__PROTO__/$http/g" \
    -e "s/__SWIFT__/$SWIFT_IP/g" \
    -e "s/__NAMESERVER__/$NAMESERVER/g" \
    -e "s/__CIDR_PRIV__/${CIDR_PRIV////\\/}/g" \
    -e "s/__NCC__/$ncc/g" -e "s/__SECRET__/$secret/g" -e "s/__ACCESS__/$access/g" \
    -e "s/__DEFAULT_DOMAIN_ID__/$default_domain_id/g" \
    templates/tempest/tempest-v3.conf.template > tempest.conf

# Git tempest, place the rendered tempest template
[ -d tempest ] || git clone https://github.com/openstack/tempest
git --git-dir=tempest/.git --work-tree=tempest checkout master
git --git-dir=tempest/.git --work-tree=tempest pull
cp tempest.conf tempest/etc
cp templates/tempest/accounts.yaml tempest/etc
