#!/bin/bash

set -ex

. ./profiles/common

install_packages

# Set serverstack defaults, if not already set.
[[ -z "$GATEWAY" ]] && export GATEWAY="10.5.0.1"
[[ -z "$CIDR_EXT" ]] && export CIDR_EXT="10.5.0.0/16"
[[ -z "$FIP_RANGE" ]] && export FIP_RANGE="10.5.150.0:10.5.200.254"
[[ -z "$NAMESERVER" ]] && export NAMESERVER="10.245.160.2"
[[ -z "$CIDR_PRIV" ]] && export CIDR_PRIV="192.168.21.0/24"
[[ -z "$SWIFT_IP" ]] && export SWIFT_IP="10.245.161.162"

# Accept network type as first parameter, assume gre if unspecified
net_type=${1:-"gre"}

# If not on bare metal, add extra port to overcloud neutron-gateway and configure charm to use it
if [[ "${BARE_METAL^^}" != "TRUE" ]]; then
    source ~/novarc
    ./bin/post-deploy-config neutron-gateway
fi

# Configure neutron networking on overcloud
source novarc
./bin/neutron-ext-net --network-type flat -g $GATEWAY -c $CIDR_EXT -f $FIP_RANGE ext_net
./bin/quantum-tenant-net --network-type $net_type -t admin -r provider-router -N $NAMESERVER private $CIDR_PRIV

upload_image cloudimages xenial xenial-server-cloudimg-amd64-root.tar.xz raw lxc
upload_image cloudimages trusty trusty-server-cloudimg-amd64-root.tar.xz raw lxc

image_id=$(openstack image list | grep trusty | awk '{ print $2 }')
image_alt_id=$(openstack image list | grep xenial | awk '{ print $2 }')

create_tempest_users

access=$(openstack --os-username demo --os-password pass --os-tenant-name demo ec2 credentials create | grep access | awk '{ print $4 }')
secret=$(openstack ec2 credentials show $access | grep secret | awk '{ print $4 }')

create_tempest_flavors

function create_exclusive_aggregate {
    exclusive_flavor=$1
    app_hostnames=$(./bin/application-hostnames nova-compute-exclusive-${exclusiveflavor})
    if [ -n "$app_hostnames" ]; then
        aggregate_name=exclusive-lxd-${exclusive_flavor}
        openstack aggregate show ${aggregate_name} || {
            openstack aggregate create ${aggregate_name}
            openstack aggregate set --property exclusive-flavor=${exclusive_flavor} ${aggregate_name}
            openstack aggregate set --property max_instances_per_host=1 ${aggregate_name}
            for hostname in ${app_hostnames}; do
                openstack aggregate add host ${aggregate_name} ${hostname}
            done
        }
        create_exclusive_flavor ${exclusive_flavor}
    fi
}

function create_exclusive_flavor {
    exclusive_flavor=$1
    case ${exclusive_flavor} in
        small)
            ram=1500
            cpu=1
            disk=40
            ;;
        medium)
            ram=3500
            cpu=2
            disk=40
            ;;
        large)
            ram=7500
            cpu=4
            disk=80
            ;;
    esac
    flavor_name=e1.lxd.${exclusive_flavor}
    openstack flavor show ${flavor_name} || {
        openstack flavor create --public --ram ${ram} --disk ${disk} --vcpus ${cpu} ${flavor_name}
        openstack flavor set --property aggregate_instance_extra_specs:exclusive-flavor=${exclusive_flavor} ${flavor_name}
    }
}

for exclusive_flavor in small medium large; do
    create_exclusive_aggregate ${exclusive_flavor}
done

# Gather vars for tempest template
ext_net=$(neutron net-list | grep ext_net | awk '{ print $2 }')
router=$(neutron router-list | grep provider-router | awk '{ print $2}')
keystone=$(juju-deployer -f keystone)
dashboard=$(juju-deployer -f openstack-dashboard)
ncc=$(juju-deployer -f nova-cloud-controller)
http=${OS_AUTH_PROTOCOL:-http}

# Insert vars into tempest conf
sed -e "s/__IMAGE_ID__/$image_id/g" -e "s/__IMAGE_ALT_ID__/$image_alt_id/g" \
    -e "s/__DASHBOARD__/$dashboard/g" -e "s/__KEYSTONE__/$keystone/g" \
    -e "s/__EXT_NET__/$ext_net/g" -e "s/__PROTO__/$http/g" \
    -e "s/__SWIFT__/$SWIFT_IP/g" \
    -e "s/__NAMESERVER__/$NAMESERVER/g" \
    -e "s/__CIDR_PRIV__/${CIDR_PRIV////\\/}/g" \
    -e "s/__NCC__/$ncc/g" -e "s/__SECRET__/$secret/g" -e "s/__ACCESS__/$access/g" \
    templates/tempest/tempest.conf.template.lxd > tempest.conf

# Git tempest, place the rendered tempest template
[ -d tempest ] || git clone https://github.com/openstack/tempest
cp tempest.conf tempest/etc
